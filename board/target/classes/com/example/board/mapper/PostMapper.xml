<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.board.mapper.PostMapper">
	<!-- 글 목록 postList를 불러오는 sql문 선언 -->
	<select id="postList" resultType="com.example.board.domain.PostVO">
		<![CDATA[
			SELECT * FROM post
			ORDER BY p_dt desc
			LIMIT #{startList}, #{listSize}
			
		]]>
	</select>
	
	<!-- 글 등록 postRegister sql문 -->
	<insert id="postRegister" parameterType="com.example.board.domain.PostVO">
		insert into post (user_id, p_title, p_content, p_dt, p_readCount)
		values (#{user_id},#{p_title},#{p_content},now(),0)
	</insert>
	
	<!-- 	특정 글 선택 시 postDetail을 가져오는 sql문	 -->
	<select id="postDetail" resultType="com.example.board.domain.PostVO">
		select * from post
		where p_no = #{p_no}
	</select>
	
	<!-- 글 삭제 sql문 -->
	<delete id="postDel" parameterType="com.example.board.domain.PostVO">
		delete
		from post
		where p_no = #{p_no}
	</delete>
	
	<!-- 글 수정 sql문 -->
	<update id="postEdit" parameterType="com.example.board.domain.PostVO">
		update post
		set p_title = #{p_title},
		p_content = #{p_content},
		p_dt = now()
		where p_no = #{p_no}
	</update>
	
	<!-- 글 조회수 증가 sql문 -->
	<update id="upReadCount" parameterType="com.example.board.domain.PostVO">
		update post
		set p_readCount = p_readCount + 1
		where p_no = #{p_no}
	</update>
	
	<!-- 페이징 처리를 위한 sql문▼▼▼▼▼▼▼▼ -->
	
	<!-- 전체 글 갯수를 얻어오는 sql문 -->
	<select id="getBoardListCnt" resultType="int">
		<![CDATA[
			SELECT
			count(*) as listCnt
			FROM post
		]]>
	</select>
	<!-- 페이징 처리를 위한 sql문▲▲▲▲▲▲▲▲ -->
	
	<!-- 파일업로드의 내용을 DB에 넣기전에 작성한 글의 p_no를 가져오는 sql  -->
	<select id="findPostNo" resultType="int">
		<![CDATA[
			SELECT p_no
			FROM post
			where p_title = #{p_title} and
			p_content = #{p_content} and
			user_id = #{user_id}
		]]>
	</select>
	
	<!-- 파일 업로드 sql문 -->
	<insert id="postAttachRegi" parameterType="com.example.board.domain.AttachVO">
		<![CDATA[
			insert into attach (ori_nm, save_nm, p_no, uuid)
			values (#{ori_nm}, #{save_nm}, #{p_no}, #{uuid})
		]]>
	</insert>
	
	<!-- 첨부파일 리스트를 가져오는 sql문 -->
	<select id="attachList" resultType="com.example.board.domain.AttachVO">
		<![CDATA[
			SELECT *
			FROM attach
			WHERE p_no = #{p_no};
		]]>
	</select>
	
	<!-- 글 수정 페이지에서 첨부파일 삭제 sql문 -->
	<delete id="delAttach" parameterType="com.example.board.domain.AttachVO">
		delete
		from attach
		where uuid = #{uuid}
	</delete>
	
</mapper>